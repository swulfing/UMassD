M_em <- list(model="constant",initial_means=array(0.2, dim = c(n_stocks,n_regions,n_ages)))
mods[[1]] = loop_through_fn(om = m4_with_data,
em_info = input4,
random = random,
M_em = M_em,
sel_em = sel_em,
NAA_re_em = NAA_re_em,
move_em = NULL,
age_comp_em = "multinomial",
em.opt = list(separate.em = TRUE, separate.em.type = 1,
do.move = FALSE, est.move = FALSE),
assess_years = assess.years,
assess_interval = assess.interval,
base_years = base.years,
year.use = 20, # number of years of data you want to use in the assessment model
#hcr.type = 1, # unused argument
seed = 123,
save.sdrep = FALSE,
save.last.em = TRUE)
traceback()
n_stocks = n_regions = 1
n_fleets = n_indices = 2
sel_em <- list(model=rep("logistic",n_fleets+n_indices),
initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
NAA_re_em <- list(N1_model="equilibrium",sigma="rec+1",cor="iid")
M_em <- list(model="constant",initial_means=array(0.2, dim = c(n_stocks,n_regions,n_ages)))
mods[[2]] = loop_through_fn(om = m4_with_data,
em_info = input4,
random = random,
M_em = M_em,
sel_em = sel_em,
NAA_re_em = NAA_re_em,
move_em = NULL,
age_comp_em = "multinomial",
em.opt = list(separate.em = TRUE, separate.em.type = 2,
do.move = FALSE, est.move = FALSE),
assess_years = assess.years,
assess_interval = assess.interval,
base_years = base.years,
year.use = 20, # number of years of data you want to use in the assessment model
#hcr.type = 1,
seed = 123,
save.sdrep = FALSE)
traceback()
ist(separate.em = TRUE, separate.em.type = 2,
do.move = FALSE, est.move = FALSE)
list(separate.em = TRUE, separate.em.type = 2,
do.move = FALSE, est.move = FALSE)
remotes::install_github("noaa-edab/ecodata",build_vignettes=TRUE)
library(wham, lib.loc = "C:/Users/chengxue.li/AppData/Local/R/win-library/4.4/wham_Tim/")
library(wham) #, lib.loc = "C:/Users/chengxue.li/AppData/Local/R/win-library/4.4/wham_Tim/")
library(whamMSE)
write.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(write.dir)
asap4 <- CCGOM
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
# devtools::install_github("timjmiller/wham", dependencies=TRUE)
# devtools::install_github("lichengxue/wham-devel", dependencies=TRUE)
# devtools::install_github("lichengxue/whamMSE", dependencies=TRUE)
# Having a save issue. What happens when I do this
library(wham) #, lib.loc = "C:/Users/chengxue.li/AppData/Local/R/win-library/4.4/wham_Tim/")
library(whamMSE)
write.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(write.dir)
# Read in data files
# TO DO: ASK WHAT EACH OF THESE ARE (TWO GOM STOCKS, TWO SNE (but one doesn't work so idk))
# FIGURE OUT HOW TO PULL THESE YOURSELF. OR WAIT TILL DATA COMES OUT (see Jessie email)
CCGOM <- read_asap3_dat("CCGOM.DAT")
write.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(write.dir)
# Read in data files
# TO DO: ASK WHAT EACH OF THESE ARE (TWO GOM STOCKS, TWO SNE (but one doesn't work so idk))
# FIGURE OUT HOW TO PULL THESE YOURSELF. OR WAIT TILL DATA COMES OUT (see Jessie email)
CCGOM <- read_asap3_dat("CCGOM.DAT")
getwd()
# Read in data files
# TO DO: ASK WHAT EACH OF THESE ARE (TWO GOM STOCKS, TWO SNE (but one doesn't work so idk))
# FIGURE OUT HOW TO PULL THESE YOURSELF. OR WAIT TILL DATA COMES OUT (see Jessie email)
CCGOM <- read_asap3_dat("ASAP Dat files/CCGOM.DAT")
asap4 <- CCGOM
View(asap4)
asap4[1]
asap4[[1]]
asap4[[1]]$dat$maturity
# THIS IS JUST TO COMPARE WHAT THE INPUT FILES LOOK LIKE IN ASAP VS THE VIGNETTES WHERE THEY GENERATE ON THEIR OWN
year_start  <- 1  # starting year in the burn-in period
year_end    <- 20  # end year in the burn-in period
MSE_years   <- 0     # number of years in the feedback loop
# Note: no need to include MSE_years in simulation-estimation
asap4 <- CCGOM
info <- generate_basic_info(n_stocks = 1,
n_regions = 1,
n_indices = 10, #CAN SPECIFY NUMBER YOU WANT TO USE. WILL REMOVE SOME SURVEYS. LATER YOU HAVE A FLAG IF YOU CAN REMOVE SOME OF THESE
n_fleets = 1, #CATCH DATA
#n_seasons = 4,
base.years = year_start:year_end,
n_feedback_years = MSE_years,
life_history = "medium",
n_ages = 6, # 6 AGE CLASSES. 1-6 THEN 6+. In this ex, not enough data past 6 yrs
#Fbar_ages = 12,
#recruit_model = 2,
F_info = list(F.year1 = 0.2, Fhist = "constant", Fmax = 0.4, Fmin = 0.2, change_time = 0.5, user_F = NULL), #historical fishing mortality (from fleet). Keep for now then adjust with fishing estimate after fitting the model
catch_info = list(catch_cv = 0.1, catch_Neff = 100),
index_info = list(index_cv = 0.1, index_Neff = 100, fracyr_indices = 0.625, q = 0.2),
fracyr_spawn = 0.625,
fracyr_seasons = NULL,
#fleet_pointer = NULL,
#index_pointer = NULL,
user_waa = NULL, #Look into WAA_mat from ASAP. May need two matrices for the MSE feedback period. Best to stabilize WAA by taking 3-5 yr average
user_maturity = NULL, #mat at age. People typically use 3-5 yr average. Look under asap4[[1]]$dat$maturity for mtx. Last year = last row. Need mtx with same dimension pasted at the bottom of this one.
bias.correct.process = FALSE, # Keep biases same. Below asumes no movement, no bias correction. Below is default. Could be deleted (we think)
bias.correct.observation = FALSE,
bias.correct.BRPs = FALSE,
mig_type = 0, #Everything below this is movement
XSPR_R_opt = 2,
move_dyn = 0, # natal homing is assumed
onto_move = 0,
onto_move_pars = NULL,
apply_re_trend = 0,
trend_re_rate = NULL,
apply_mu_trend = 0,
trend_mu_rate = NULL,
age_mu_devs = NULL)
basic_info = info$basic_info # collect basic information
catch_info = info$catch_info # collect fleet catch information. Subset focusing just on the catch itself.
index_info = info$index_info # collect survey information. Some indices will have agregate catch, some have more thorough info
F_info = info$F # collect fishing information
# # see more details using ?generate_basic_info
#### CHENG: I THINK ONE OF MY BIGGEST HURDLES IS JUST THAT I'M USING AN ASAP FILE AS OPPOSED TO GENERATED DATA. BECAUSE OF THIS, THERE ARE PARTS THAT I'M FOLLOWING TJ MILLERS WHAM VIGNETTES (I CAN SEND THEM IF THAT'S HELPFUL). I'M STILL UNDERSTANDING ASAP FILES SO CAN HAVE A HARD TIME TRANSLATING BETWEEN THE GENERATED INFO IN THE VIGNETTE AND THE ASAP OUTPUT ####
# 1: You are not the only one having this trouble. The current MSE package requires users to simplify the ASAP Data. However, I can try to help you translate ASAP info as much as possible to whamMSE.
# 2: The problem is an ASAP file has a lot of information (some will be used in wham some will never be used in wham!) which requires an R wrapper that can completely handle every type of information in detail for different stocks, which is difficult especially for a early stage of a MSE platform.
# 3: If you want to know which information from ASAP will be used in wham, you may check the source code of prepare_wham_input(): 'https://github.com/timjmiller/wham/blob/devel/R/prepare_wham_input.R'
# 4: I can later send you a list that tells you which information you can 100% translate from ASAP to MSE, and which information you need to simplify, and which information MSE package doesn't support.
####CHENG: ALSO IF I RUN THIS CODE AS IS, I GET AN ERROR:  "unused arguments (Fbar_ages = 12, recruit_model = 2, fleet_pointer = NULL, index_pointer = NULL)" IVE JUST BEEN COMMENTING THOSE ARGUMENTS OUT BUT I'M NOT SURE IF I SHOULD ####
## Reply: You are right, vignettes haven't been updated since Jan, which is completely my fault. I will try to update them this week and let you know when I'm done.
input1 <- prepare_wham_input(asap4, recruit_model=2, model_name="Trying one stock: GOM Yellowtail Flounder",
selectivity=list(model=rep("age-specific",5),
re=rep("none",5),
initial_pars=list(c(0.5,0.5,0.5,1,1,0.5),c(0.5,0.5,0.5,1,0.5,0.5),c(0.5,1,1,1,0.5,0.5),
c(0.5,0.5,0.5,1,1,0.5),c(0.5,0.5,0.5,1,0.5,0.5)),
fix_pars=list(4:5,4,2:4,
4:5,4)),
NAA_re = list(sigma="rec", cor="iid")) # Including selectivity throws an error I haven't
wham.dir <- find.package("wham")
file.copy(from=file.path(wham.dir,"extdata","ex1_SNEMAYT.dat"), to=write.dir, overwrite=FALSE)
asap3 <- read_asap3_dat("ex1_SNEMAYT.dat") #Just so I can compare to the example data
View(asap3)
library(wham)
library(whamMSE)
write.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(write.dir)
CCGOM <- read_asap3_dat("ASAP Dat files/CCGOM.DAT")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(wham)
library(whamMSE)
write.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(write.dir)
# Read in data files
# TO DO: ASK WHAT EACH OF THESE ARE (TWO GOM STOCKS, TWO SNE (but one doesn't work so idk))
# FIGURE OUT HOW TO PULL THESE YOURSELF. OR WAIT TILL DATA COMES OUT (see Jessie email)
CCGOM <- read_asap3_dat("ASAP Dat files/CCGOM.DAT")
# CCGOM_alt3 <- read_asap3_dat("ASAP Dat files/CCGOM_alt3.DAT")
# GBK <- read_asap3_dat("ASAP Dat files/GBK.DAT")
# # SNE_2023 <- read_asap3_dat("ASAP Dat files/sne_asap_2023_RT.DAT") this one doesnt work. WHY? Accordign to Jessie this is the right one so figure it out
# SNEMA<- read_asap3_dat("ASAP Dat files/SNEMA_split.DAT")
# THIS IS JUST TO COMPARE WHAT THE INPUT FILES LOOK LIKE IN ASAP VS THE VIGNETTES WHERE THEY GENERATE ON THEIR OWN
year_start  <- 1  # starting year in the burn-in period
year_end    <- 20  # end year in the burn-in period
MSE_years   <- 0     # number of years in the feedback loop
# Note: no need to include MSE_years in simulation-estimation
asap4 <- CCGOM
info <- generate_basic_info(n_stocks = 1,
n_regions = 1,
n_indices = 10, # FROM ASAP. WILL REDUCE LATER BASED ON OUTPUTS
n_fleets = 1,
#n_seasons = 4, OMMITTING BECAUSE ASSUMING DEFAULT?.
base.years = year_start:year_end,
n_feedback_years = MSE_years,
life_history = "medium",
n_ages = 6, # 6 AGE CLASSES. 1-6 THEN 6+. In this ex, not enough data past 6 yrs
#Fbar_ages = 12,
#recruit_model = 2,
F_info = list(F.year1 = 0.2, Fhist = "constant", Fmax = 0.4, Fmin = 0.2, change_time = 0.5, user_F = NULL), # WILL BE ADJUSTED WITH FITTING ESTIMATES AFTER FITTING MODEL
catch_info = list(catch_cv = 0.1, catch_Neff = 100),
index_info = list(index_cv = 0.1, index_Neff = 100, fracyr_indices = 0.625, q = 0.2),
fracyr_spawn = 0.625,
fracyr_seasons = NULL,
#fleet_pointer = NULL,
#index_pointer = NULL,
user_waa = NULL, # WAIT FOR CHENG
user_maturity = NULL, # WAIT FOR CHENG. NEED MATRICES FROM WAA FROM ASAP
bias.correct.process = FALSE, # Below = Default. Assumes no movement, no bias correction
bias.correct.observation = FALSE,
bias.correct.BRPs = FALSE,
mig_type = 0,
XSPR_R_opt = 2,
move_dyn = 0, # natal homing is assumed
onto_move = 0,
onto_move_pars = NULL,
apply_re_trend = 0,
trend_re_rate = NULL,
apply_mu_trend = 0,
trend_mu_rate = NULL,
age_mu_devs = NULL)
basic_info = info$basic_info
catch_info = info$catch_info
index_info = info$index_info
F_info = info$F # collect fishing information. Estimated in fitted model
# # see more details using ?generate_basic_info
# NOTES FROM CHENG
# 3: If you want to know which information from ASAP will be used in wham, you may check the source code of prepare_wham_input(): 'https://github.com/timjmiller/wham/blob/devel/R/prepare_wham_input.R'
# 4: I can later send you a list that tells you which information you can 100% translate from ASAP to MSE, and which information you need to simplify, and which information MSE package doesn't support.
asap4[[1]]$dat$use_index
# GAVIN QUESTION: IM USING SELECTIVITIES FROM 1995-2022. SHOULD I JUST USE THE MOST RECENT OR AVERAGE ACROSS YEARS? Cheng is currently developing code that can handle a gearshift usage
input1 <- prepare_wham_input(info, recruit_model=2, model_name="Trying one stock: GOM Yellowtail Flounder",
selectivity=list(model=rep("age-specific",5),
re=rep("none",5),                                  initial_pars=list(c(0,0.025,0.325,0.9,1,1),c(0.2,0.775,0.975,1,1,1),c(0, 0.1, 0.8, 1, 1, 1),
c(0, 0.2, 0.85, 1, 1, 1),c(0.125, 0.7, 0.975, 1, 1, 1)), #ORDER: FLEET1 THEN. INDEX 1. FIX THESE AND ADD SELECTIVITIES TO ALL MODELS I RUN
fix_pars=list(4:5,4,2:4,
4:5,4)),
NAA_re = list(sigma="rec", cor="iid"))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(wham)
library(whamMSE)
write.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(write.dir)
# Read in data files
# TO DO: ASK WHAT EACH OF THESE ARE (TWO GOM STOCKS, TWO SNE (but one doesn't work so idk))
# FIGURE OUT HOW TO PULL THESE YOURSELF. OR WAIT TILL DATA COMES OUT (see Jessie email)
CCGOM <- read_asap3_dat("ASAP Dat files/CCGOM.DAT")
# CCGOM_alt3 <- read_asap3_dat("ASAP Dat files/CCGOM_alt3.DAT")
# GBK <- read_asap3_dat("ASAP Dat files/GBK.DAT")
# # SNE_2023 <- read_asap3_dat("ASAP Dat files/sne_asap_2023_RT.DAT") this one doesnt work. WHY? Accordign to Jessie this is the right one so figure it out
# SNEMA<- read_asap3_dat("ASAP Dat files/SNEMA_split.DAT")
# THIS IS JUST TO COMPARE WHAT THE INPUT FILES LOOK LIKE IN ASAP VS THE VIGNETTES WHERE THEY GENERATE ON THEIR OWN
year_start  <- 1  # starting year in the burn-in period
year_end    <- 20  # end year in the burn-in period
MSE_years   <- 0     # number of years in the feedback loop
# Note: no need to include MSE_years in simulation-estimation
asap4 <- CCGOM
info <- generate_basic_info(n_stocks = 1,
n_regions = 1,
n_indices = 10, # FROM ASAP. WILL REDUCE LATER BASED ON OUTPUTS
n_fleets = 1,
#n_seasons = 4, OMMITTING BECAUSE ASSUMING DEFAULT?.
base.years = year_start:year_end,
n_feedback_years = MSE_years,
life_history = "medium",
n_ages = 6, # 6 AGE CLASSES. 1-6 THEN 6+. In this ex, not enough data past 6 yrs
#Fbar_ages = 12,
#recruit_model = 2,
F_info = list(F.year1 = 0.2, Fhist = "constant", Fmax = 0.4, Fmin = 0.2, change_time = 0.5, user_F = NULL), # WILL BE ADJUSTED WITH FITTING ESTIMATES AFTER FITTING MODEL
catch_info = list(catch_cv = 0.1, catch_Neff = 100),
index_info = list(index_cv = 0.1, index_Neff = 100, fracyr_indices = 0.625, q = 0.2),
fracyr_spawn = 0.625,
fracyr_seasons = NULL,
#fleet_pointer = NULL,
#index_pointer = NULL,
user_waa = NULL, # WAIT FOR CHENG
user_maturity = NULL, # WAIT FOR CHENG. NEED MATRICES FROM WAA FROM ASAP
bias.correct.process = FALSE, # Below = Default. Assumes no movement, no bias correction
bias.correct.observation = FALSE,
bias.correct.BRPs = FALSE,
mig_type = 0,
XSPR_R_opt = 2,
move_dyn = 0, # natal homing is assumed
onto_move = 0,
onto_move_pars = NULL,
apply_re_trend = 0,
trend_re_rate = NULL,
apply_mu_trend = 0,
trend_mu_rate = NULL,
age_mu_devs = NULL)
basic_info = info$basic_info
catch_info = info$catch_info
index_info = info$index_info
F_info = info$F # collect fishing information. Estimated in fitted model
# # see more details using ?generate_basic_info
# NOTES FROM CHENG
# 3: If you want to know which information from ASAP will be used in wham, you may check the source code of prepare_wham_input(): 'https://github.com/timjmiller/wham/blob/devel/R/prepare_wham_input.R'
# 4: I can later send you a list that tells you which information you can 100% translate from ASAP to MSE, and which information you need to simplify, and which information MSE package doesn't support.
# GAVIN QUESTION: IM USING SELECTIVITIES FROM 1995-2022. SHOULD I JUST USE THE MOST RECENT OR AVERAGE ACROSS YEARS? Cheng is currently developing code that can handle a gearshift usage
input1 <- prepare_wham_input(info, recruit_model=2, model_name="Trying one stock: GOM Yellowtail Flounder",
selectivity=list(model=rep("age-specific",5),
re=rep("none",5),                                  initial_pars=list(c(0,0.025,0.325,0.9,1,1),c(0.2,0.775,0.975,1,1,1),c(0, 0.1, 0.8, 1, 1, 1),
c(0, 0.2, 0.85, 1, 1, 1),c(0.125, 0.7, 0.975, 1, 1, 1)), #ORDER: FLEET1 THEN. INDEX 1. FIX THESE AND ADD SELECTIVITIES TO ALL MODELS I RUN
fix_pars=list(4:5,4,2:4,
4:5,4)),
NAA_re = list(sigma="rec", cor="iid"))
# Selectivity and Natural Mortality Config
n_stocks  <- as.integer(basic_info['n_stocks'])
n_regions <- as.integer(basic_info['n_regions'])
n_fleets  <- as.integer(basic_info['n_fleets'])
n_indices <- as.integer(basic_info['n_indices'])
n_ages    <- as.integer(basic_info['n_ages'])
n_stocks
sel <- list(model=rep("logistic",n_fleets+n_indices),
initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
# Selectivity and Natural Mortality Config
n_stocks  <- as.integer(basic_info['n_stocks'])
n_regions <- as.integer(basic_info['n_regions'])
n_fleets  <- as.integer(basic_info['n_fleets'])
n_indices <- as.integer(basic_info['n_indices'])
n_ages    <- as.integer(basic_info['n_ages'])
# Selectivity Configuration
fleet_pars <- c(5,1)
index_pars <- c(2,1)
sel <- list(model=rep("logistic",n_fleets+n_indices),
initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
View(sel)
re=rep("none",5),                                  initial_pars=list(c(0,0.025,0.325,0.9,1,1),c(0.2,0.775,0.975,1,1,1),c(0, 0.1, 0.8, 1, 1, 1),
SELLIST <- list(model=rep("age-specific",5),
re=rep("none",5),                                  initial_pars=list(c(0,0.025,0.325,0.9,1,1),c(0.2,0.775,0.975,1,1,1),c(0, 0.1, 0.8, 1, 1, 1),
c(0, 0.2, 0.85, 1, 1, 1),c(0.125, 0.7, 0.975, 1, 1, 1)), #ORDER: FLEET1 THEN. INDEX 1. FIX THESE AND ADD SELECTIVITIES TO ALL MODELS I RUN
fix_pars=list(4:5,4,2:4,
4:5,4))
View(SELLIST)
# Selectivity Configuration
fleet_pars <- c(0,0.025,0.325,0.9,1,1)
index_pars <- c(2,1)
sel <- list(model=rep("age-specific",n_fleets+n_indices),
initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
# Selectivity Configuration
fleet_pars <- c(0,0.025,0.325,0.9,1,1)
index_pars <- list(c(0.2,0.775,0.975,1,1,1),c(0, 0.1, 0.8, 1, 1, 1),                                                    c(0, 0.2, 0.85, 1, 1, 1),c(0.125, 0.7, 0.975, 1, 1, 1)
sel <- list(model=rep("age-specific",n_fleets+n_indices),
sel <- list(model=rep("age-specific",n_fleets+n_indices), initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
View(sel)
index_pars <- list(c(0.2,0.775,0.975,1,1,1),c(0, 0.1, 0.8, 1, 1, 1),                                                    c(0, 0.2, 0.85, 1, 1, 1),c(0.125, 0.7, 0.975, 1, 1, 1)
# Selectivity Configuration
fleet_pars <- c(0,0.025,0.325,0.9,1,1)
index_pars <- list(c(0.2,0.775,0.975,1,1,1),c(0, 0.1, 0.8, 1, 1, 1),                                                    c(0, 0.2, 0.85, 1, 1, 1),c(0.125, 0.7, 0.975, 1, 1, 1))
sel <- list(model=rep("age-specific",n_fleets+n_indices), initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
# M Configuration
M <- list(model="constant",initial_means=array(0.2, dim = c(n_stocks,n_regions,n_ages)))
# M Configuration
M <- list(model="constant",initial_means=array(0.2, dim = c(n_stocks,n_regions,n_ages)))
# NAA Config - WILL CHANGE IN M2-4?
sigma        <- "rec"
re_cor       <- "iid"
ini.opt      <- "equilibrium" # option <- c("age-specific-fe", "equilibrium")
Rec_sig      <- 0.5 # (sigma for recruitment)
NAA_sig      <- 0.5 # (sigma for NAA)
sigma_vals = array(NAA_sig, dim = c(n_stocks, n_regions, n_ages)) # n_stocks x n_regions x n_ages
sigma_vals[,,1] = Rec_sig
# Set initial NAA for each stock
log_N1    <- rep(10,n_stocks)
log_N1[1] <- log(exp(10)*2) # N1_stock1 is 2 times higher than N1_stock2
N1_pars   <- generate_ini_N1(log_N1,basic_info,ini.opt)
# Set mean recruitment para. for each stock
mean_rec_par <- list()
for (i in 1:n_stocks) mean_rec_par[[i]] <- exp(log_N1[i])
NAA_re <- list(N1_model=rep(ini.opt,n_stocks),
sigma=rep(sigma,n_stocks),
cor=rep(re_cor,n_stocks),
recruit_model = 2,  # rec random around the mean
recruit_pars = mean_rec_par,
sigma_vals = sigma_vals,
N1_pars = N1_pars,
NAA_where = basic_info$NAA_where) # NAA_where must be specified in basic_info!
input <- prepare_wham_input(basic_info = basic_info,
selectivity = sel,
M = M,
NAA_re = NAA_re,
#move = move, WE'RE ASSUMING NO MOVEMENT. CAN I JUST COMMENT THIS OUT?
catch_info = catch_info,
index_info = index_info,
F = F_info)
sel_EX <- list(model=rep("logistic",n_fleets+n_indices),
initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
View(sel_EX)
fleet_pars1 <- c(5,1)
index_pars1 <- c(2,1)
sel_EX <- list(model=rep("logistic",n_fleets+n_indices),
initial_pars=c(rep(list(fleet_pars1),n_fleets),rep(list(index_pars1),n_indices)))
fleet_pars1 <- c(5,1)
index_pars1 <- c(2,1)
sel_EX <- list(model=rep("logistic",4+4),
initial_pars=c(rep(list(fleet_pars1),4),rep(list(index_pars1),2)))
View(sel_EX)
# Selectivity Configuration
fleet_pars <- c(0,0.025,0.325,0.9,1,1)
index_pars <- list(c(0.2,0.775,0.975,1,1,1),c(0, 0.1, 0.8, 1, 1, 1),                                                    c(0, 0.2, 0.85, 1, 1, 1),c(0.125, 0.7, 0.975, 1, 1, 1))
sel <- list(model=rep("age-specific",n_fleets+n_indices), initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
View(sel)
?fix_pars
?\?fix_pars
??fix_pars
?prepare_wham_input
# Selectivity and Natural Mortality Config
n_stocks  <- as.integer(basic_info['n_stocks'])
n_regions <- as.integer(basic_info['n_regions'])
n_fleets  <- as.integer(basic_info['n_fleets'])
n_indices <- as.integer(basic_info['n_indices'])
n_ages    <- as.integer(basic_info['n_ages'])
# Selectivity Configuration
fleet_pars <- c(0,0.025,0.325,0.9,1,1)
index_pars <- list(c(0.2,0.775,0.975,1,1,1),c(0, 0.1, 0.8, 1, 1, 1),                                                    c(0, 0.2, 0.85, 1, 1, 1),c(0.125, 0.7, 0.975, 1, 1, 1))
sel <- list(model=rep("age-specific",n_fleets+n_indices), initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
# M Configuration
M <- list(model="constant",initial_means=array(0.2, dim = c(n_stocks,n_regions,n_ages)))
# NAA Config - WILL CHANGE IN M2-4?
sigma        <- "rec"
re_cor       <- "iid"
ini.opt      <- "equilibrium" # option <- c("age-specific-fe", "equilibrium")
Rec_sig      <- 0.5 # (sigma for recruitment)
NAA_sig      <- 0.5 # (sigma for NAA)
sigma_vals = array(NAA_sig, dim = c(n_stocks, n_regions, n_ages)) # n_stocks x n_regions x n_ages
sigma_vals[,,1] = Rec_sig
# Set initial NAA for each stock
log_N1    <- rep(10,n_stocks)
log_N1[1] <- log(exp(10)*2) # N1_stock1 is 2 times higher than N1_stock2
N1_pars   <- generate_ini_N1(log_N1,basic_info,ini.opt)
# Set mean recruitment para. for each stock
mean_rec_par <- list()
for (i in 1:n_stocks) mean_rec_par[[i]] <- exp(log_N1[i])
NAA_re <- list(N1_model=rep(ini.opt,n_stocks),
sigma=rep(sigma,n_stocks),
cor=rep(re_cor,n_stocks),
recruit_model = 2,  # rec random around the mean
recruit_pars = mean_rec_par,
sigma_vals = sigma_vals,
N1_pars = N1_pars,
NAA_where = basic_info$NAA_where) # NAA_where must be specified in basic_info!
input <- prepare_wham_input(basic_info = basic_info,
selectivity = sel,
M = M,
NAA_re = NAA_re,
#move = move, WE'RE ASSUMING NO MOVEMENT. CAN I JUST COMMENT THIS OUT?
catch_info = catch_info,
index_info = index_info,
F = F_info)
View(sel)
sel <- list(model=rep("age-specific",n_fleets+n_indices), initial_pars=c(rep(list(fleet_pars),n_fleets),list(index_pars)))
View(sel)
n_fleets
sel <- list(model=rep("age-specific",n_fleets+n_indices), initial_pars=c(list(fleet_pars),list(index_pars),n_indices))
View(sel)
sel <- list(model=rep("age-specific",n_fleets+n_indices), initial_pars=c(list(fleet_pars),list(index_pars)))
View(sel)
sel <- list(model=rep("age-specific",n_fleets+n_indices), initial_pars=c(list(fleet_pars),index_pars))
View(sel)
input <- prepare_wham_input(basic_info = basic_info,
selectivity = sel,
M = M,
NAA_re = NAA_re,
#move = move, WE'RE ASSUMING NO MOVEMENT. CAN I JUST COMMENT THIS OUT?
catch_info = catch_info,
index_info = index_info,
F = F_info)
selectivity$initial_pars
sel$initial_pars
asap4 <- CCGOM
info <- generate_basic_info(n_stocks = 1,
n_regions = 1,
n_indices = 6, # FROM ASAP. WILL REDUCE LATER BASED ON OUTPUTS
n_fleets = 1,
#n_seasons = 4, OMMITTING BECAUSE ASSUMING DEFAULT?.
base.years = year_start:year_end,
n_feedback_years = MSE_years,
life_history = "medium",
n_ages = 6, # 6 AGE CLASSES. 1-6 THEN 6+. In this ex, not enough data past 6 yrs
#Fbar_ages = 12,
#recruit_model = 2,
F_info = list(F.year1 = 0.2, Fhist = "constant", Fmax = 0.4, Fmin = 0.2, change_time = 0.5, user_F = NULL), # WILL BE ADJUSTED WITH FITTING ESTIMATES AFTER FITTING MODEL
catch_info = list(catch_cv = 0.1, catch_Neff = 100),
index_info = list(index_cv = 0.1, index_Neff = 100, fracyr_indices = 0.625, q = 0.2),
fracyr_spawn = 0.625,
fracyr_seasons = NULL,
#fleet_pointer = NULL,
#index_pointer = NULL,
user_waa = NULL, # WAIT FOR CHENG
user_maturity = NULL, # WAIT FOR CHENG. NEED MATRICES FROM WAA FROM ASAP
bias.correct.process = FALSE, # Below = Default. Assumes no movement, no bias correction
bias.correct.observation = FALSE,
bias.correct.BRPs = FALSE,
mig_type = 0,
XSPR_R_opt = 2,
move_dyn = 0, # natal homing is assumed
onto_move = 0,
onto_move_pars = NULL,
apply_re_trend = 0,
trend_re_rate = NULL,
apply_mu_trend = 0,
trend_mu_rate = NULL,
age_mu_devs = NULL)
basic_info = info$basic_info
catch_info = info$catch_info
index_info = info$index_info
F_info = info$F # collect fishing information. Estimated in fitted model
# Selectivity and Natural Mortality Config
n_stocks  <- as.integer(basic_info['n_stocks'])
n_regions <- as.integer(basic_info['n_regions'])
n_fleets  <- as.integer(basic_info['n_fleets'])
n_indices <- as.integer(basic_info['n_indices'])
n_ages    <- as.integer(basic_info['n_ages'])
# Selectivity Configuration
fleet_pars <- c(0,0.025,0.325,0.9,1,1)
index_pars <- list(c(0.2,0.775,0.975,1,1,1),c(0, 0.1, 0.8, 1, 1, 1),                                                    c(0, 0.2, 0.85, 1, 1, 1),c(0.125, 0.7, 0.975, 1, 1, 1))
input <- prepare_wham_input(basic_info = basic_info,
selectivity = sel,
M = M,
NAA_re = NAA_re,
#move = move, WE'RE ASSUMING NO MOVEMENT. CAN I JUST COMMENT THIS OUT?
catch_info = catch_info,
index_info = index_info,
F = F_info)
asap3$n_fleet_sel_blocks
basic_info$n_fleet_sel_blocks
basic_info$n_indices
View(sel)
length(sel)
