gb_datM[[1]]$dat$M[,4]<-0.23
gb_datM[[1]]$dat$M[,5]<-0.22
gb_datM[[1]]$dat$M[,6]<-0.22
input3 <- prepare_wham_input(gb_datM,
selectivity=sel2,
recruit_model=3,
age_comp = "logistic-normal-pool0",
NAA_re = list(sigma="rec+1", cor ="iid"),
ecov = ecov,
model_name="Run28",
basic_info = list(simulate_process_error = rep(FALSE, 5))
)
input3$map$mean_rec_pars <- factor(c(2,1))
input3$map$mean_rec_pars <- factor(c(NA,NA))
mT <- fit_wham(input3, MakeADFun.silent = FALSE ,do.osa = F, do.retro = F)
mT <- fit_wham(input3, MakeADFun.silent = FALSE ,do.osa = F, do.retro = F, do.fit = F)
mT <- fit_wham(input3, do.osa = F, do.retro = F, do.fit = F) # MakeADFun.silent = FALSE
library(wham) #, lib.loc = "C:/Users/alex.hansell/AppData/Local/Programs/R/R-4.2.2/library/multi_wham/")
require(tidyr)
require(dplyr)
require(readxl)
require(purrr)
require(here)
require(ggplot2)
write.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(write.dir)
gb_dat <- read_asap3_dat(here("YT_proj/ASAP Dat files/GBK.DAT"))
env.dat <- read.csv("CI_indices.csv")
env.dat<-env.dat%>%
filter(Year > 1972)
ecov <- list(
label = "bt_temp",
mean = as.matrix(env.dat$bt_temp),
logsigma = 'est_1', # estimate obs sigma, 1 value shared across years
year = env.dat$Year,
use_obs = matrix(1, ncol=1, nrow=dim(env.dat)[1]),
#lag =1,# use all obs (=1)
process_model = "ar1") #, # "rw" or "ar1"
ecov$recruitment_how <- matrix("controlling-lag-1-linear") #add recruitment how to ecov
sel2=list(
model=c("age-specific",
"logistic","logistic","logistic"),
re = c("ar1_y","none","none","none"),
initial_pars=list(
c(0.1,0.25,0.5,1,1,1), # Commercial fleet
c(2,0.3), # Spring NEFSC
c(2,0.3), # Fall NEFSC
c(2,0.3)), # DFO survey
fix_pars = list(
c(6),
c(NULL),
c(NULL),
c(NULL))
)
gb_datM<-gb_dat
gb_datM[[1]]$dat$M[,1]<-0.57
gb_datM[[1]]$dat$M[,2]<-0.33
gb_datM[[1]]$dat$M[,3]<-0.26
gb_datM[[1]]$dat$M[,4]<-0.23
gb_datM[[1]]$dat$M[,5]<-0.22
gb_datM[[1]]$dat$M[,6]<-0.22
input3 <- prepare_wham_input(gb_datM,
selectivity=sel2,
recruit_model=3,
age_comp = "logistic-normal-pool0",
NAA_re = list(sigma="rec+1", cor ="iid"),
ecov = ecov,
model_name="Run28",
basic_info = list(simulate_process_error = rep(FALSE, 5))
)
input3$map$mean_rec_pars <- factor(c(2,1))
input3$map$mean_rec_pars <- factor(c(NA,NA))
mT <- fit_wham(input3, MakeADFun.silent = FALSE ,do.osa = F, do.retro = F)
mT <- fit_wham(input3, MakeADFun.silent = FALSE ,do.osa = F, do.retro = F, do.fit = F)
mT
therep = mT$report()
names(therep)
sapply(grep("nll",names(therep),value=T), function(x) sum(therep[[x]]))
input3$data$agg_catch
therep$NAA
View(therep$NAA)
print(therep$NAA)
therep$FAA[,1,]
therep$ZAA
therep$M
input3$data$waa[1,,]
input3 <- prepare_wham_input(gb_datM,
selectivity=sel2,
recruit_model=3,
age_comp = "logistic-normal-pool0",
NAA_re = list(sigma="rec+1", cor ="iid"),
ecov = ecov,
model_name="Run28",
basic_info = list(simulate_process_error = rep(FALSE, 5))
)
input3$map$mean_rec_pars <- factor(c(2,1))
input3$map$mean_rec_pars <- factor(c(NA,NA))
mT <- fit_wham(input3, MakeADFun.silent = FALSE ,do.osa = F, do.retro = F, do.fit = F)
#pak::pkg_install("timjmiller/wham@lab", lib = "C:/Users/alex.hansell/AppData/Local/Programs/R/R-4.2.2/library/multi_wham/")
library(wham) #, lib.loc = "C:/Users/alex.hansell/AppData/Local/Programs/R/R-4.2.2/library/multi_wham/")
require(tidyr)
require(dplyr)
require(readxl)
require(purrr)
require(here)
require(ggplot2)
# source(here("R/my_wham_functions.R"))
# source(here::here("R/calc_hindcast_mase.R"))
# source(here::here("R/fit_hindcast.R"))
# source(here::here("R/do_selftest.R"))
# source(here::here("R/sim_fn.R"))
# source(here::here("R/make_simtest_plots.R"))
write.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(write.dir)
gb_dat <- read_asap3_dat(here("YT_proj/ASAP Dat files/GBK.DAT"))
env.dat <- read.csv("CI_indices.csv")
env.dat<-env.dat%>%
filter(Year > 1972)
ecov <- list(
label = "bt_temp",
mean = as.matrix(env.dat$bt_temp),
logsigma = 'est_1', # estimate obs sigma, 1 value shared across years
year = env.dat$Year,
use_obs = matrix(1, ncol=1, nrow=dim(env.dat)[1]),
#lag =1,# use all obs (=1)
process_model = "ar1") #, # "rw" or "ar1"
ecov$recruitment_how <- matrix("controlling-lag-1-linear") #add recruitment how to ecov
sel2=list(
model=c("age-specific",
"logistic","logistic","logistic"),
re = c("ar1_y","none","none","none"),
initial_pars=list(
c(0.1,0.25,0.5,1,1,1), # Commercial fleet
c(2,0.3), # Spring NEFSC
c(2,0.3), # Fall NEFSC
c(2,0.3)), # DFO survey
fix_pars = list(
c(6),
c(NULL),
c(NULL),
c(NULL))
)
gb_datM<-gb_dat
gb_datM[[1]]$dat$M[,1]<-0.57
gb_datM[[1]]$dat$M[,2]<-0.33
gb_datM[[1]]$dat$M[,3]<-0.26
gb_datM[[1]]$dat$M[,4]<-0.23
gb_datM[[1]]$dat$M[,5]<-0.22
gb_datM[[1]]$dat$M[,6]<-0.22
input3 <- prepare_wham_input(gb_datM,
selectivity=sel2,
recruit_model=3,
age_comp = "logistic-normal-pool0",
NAA_re = list(sigma="rec+1", cor ="iid"),
ecov = ecov,
model_name="Run28",
basic_info = list(simulate_process_error = rep(FALSE, 5))
)
input3$map$mean_rec_pars <- factor(c(2,1))
# mean(fit_1$rep$log_SR_a[38:50,])
# mean(fit_1$rep$log_SR_b[38:50,])
#
# input3$par$mean_rec_pars[,1]<-c(mean(fit_1$rep$log_SR_a[38:50,]))
# input3$par$mean_rec_pars[,2]<-c(mean(fit_1$rep$log_SR_b[38:50,]))
input3$map$mean_rec_pars <- factor(c(NA,NA))
mT <- fit_wham(input3, MakeADFun.silent = FALSE ,do.osa = F, do.retro = F, do.fit = F)
therep = mT$report()
sapply(grep("nll",names(therep),value=T), function(x) sum(therep[[x]]))
input3$data$agg_catch
therep$NAA
table(therep$NAA)
install.packages(c("data.table", "tibblify"))
library(data.table)
library(tibblify)
as.data.table(tibblify(therep$NAA))
therep$NAA
head(therep$NAA)
class(therep$NAA)
therep$ZAA
input$data$waa[1,,]
input3$data$waa[1,,]
therep$NAA
head(therep$NAA)
#pak::pkg_install("timjmiller/wham@lab", lib = "C:/Users/alex.hansell/AppData/Local/Programs/R/R-4.2.2/library/multi_wham/")
library(wham) #, lib.loc = "C:/Users/alex.hansell/AppData/Local/Programs/R/R-4.2.2/library/multi_wham/")
require(tidyr)
require(dplyr)
require(readxl)
require(purrr)
require(here)
require(ggplot2)
# source(here("R/my_wham_functions.R"))
# source(here::here("R/calc_hindcast_mase.R"))
# source(here::here("R/fit_hindcast.R"))
# source(here::here("R/do_selftest.R"))
# source(here::here("R/sim_fn.R"))
# source(here::here("R/make_simtest_plots.R"))
write.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(write.dir)
gb_dat <- read_asap3_dat(here("YT_proj/ASAP Dat files/GBK.DAT"))
env.dat <- read.csv("CI_indices.csv")
env.dat<-env.dat%>%
filter(Year > 1972)
ecov <- list(
label = "bt_temp",
mean = as.matrix(env.dat$bt_temp),
logsigma = 'est_1', # estimate obs sigma, 1 value shared across years
year = env.dat$Year,
use_obs = matrix(1, ncol=1, nrow=dim(env.dat)[1]),
#lag =1,# use all obs (=1)
process_model = "ar1") #, # "rw" or "ar1"
ecov$recruitment_how <- matrix("controlling-lag-1-linear") #add recruitment how to ecov
sel2=list(
model=c("age-specific",
"logistic","logistic","logistic"),
re = c("ar1_y","none","none","none"), #re = c("ar1_y","none","none","none"),
initial_pars=list(
c(0.1,0.25,0.5,1,1,1), # Commercial fleet
c(2,0.3), # Spring NEFSC
c(2,0.3), # Fall NEFSC
c(2,0.3)), # DFO survey
fix_pars = list(
c(6),
c(NULL),
c(NULL),
c(NULL))
)
gb_datM<-gb_dat
gb_datM[[1]]$dat$M[,1]<-0.57
gb_datM[[1]]$dat$M[,2]<-0.33
gb_datM[[1]]$dat$M[,3]<-0.26
gb_datM[[1]]$dat$M[,4]<-0.23
gb_datM[[1]]$dat$M[,5]<-0.22
gb_datM[[1]]$dat$M[,6]<-0.22
input3 <- prepare_wham_input(gb_datM,
selectivity=sel2,
recruit_model=3,
age_comp = "logistic-normal-pool0",
NAA_re = list(sigma="rec+1", cor ="iid"),
ecov = ecov,
model_name="Run28",
basic_info = list(simulate_process_error = rep(FALSE, 5))
)
input3$map$mean_rec_pars <- factor(c(2,1))
# mean(fit_1$rep$log_SR_a[38:50,])
# mean(fit_1$rep$log_SR_b[38:50,])
#
# input3$par$mean_rec_pars[,1]<-c(mean(fit_1$rep$log_SR_a[38:50,]))
# input3$par$mean_rec_pars[,2]<-c(mean(fit_1$rep$log_SR_b[38:50,]))
input3$map$mean_rec_pars <- factor(c(NA,NA))
mT <- fit_wham(input3, MakeADFun.silent = FALSE ,do.osa = F, do.retro = F, do.fit = F)
View(mT)
mean(mT$rep$log_SR_a[38:50,])
mean(mT$rep$log_SR_b[38:50,])
input3$par$mean_rec_pars[,1]<-c(mean(mT$rep$log_SR_a[38:50,])) # IFX THESE
input3$par$mean_rec_pars[,2]<-c(mean(mT$rep$log_SR_b[38:50,])) # FIX THESE
mT$rep$log_SR_a
mT$rep$log_SR_b
#setwd(here("Runs/mAGE/"))
plot_wham_output(mT)
sel2=list(
model=c("age-specific",
"logistic","logistic","logistic"),
re = c("none","none","none","none"), #re = c("ar1_y","none","none","none"),
initial_pars=list(
c(0.1,0.25,0.5,1,1,1), # Commercial fleet
c(2,0.3), # Spring NEFSC
c(2,0.3), # Fall NEFSC
c(2,0.3)), # DFO survey
fix_pars = list(
c(6),
c(NULL),
c(NULL),
c(NULL))
)
gb_datM<-gb_dat
gb_datM[[1]]$dat$M[,1]<-0.57
gb_datM[[1]]$dat$M[,2]<-0.33
gb_datM[[1]]$dat$M[,3]<-0.26
gb_datM[[1]]$dat$M[,4]<-0.23
gb_datM[[1]]$dat$M[,5]<-0.22
gb_datM[[1]]$dat$M[,6]<-0.22
input3 <- prepare_wham_input(gb_datM,
selectivity=sel2,
recruit_model=3,
age_comp = "logistic-normal-pool0",
NAA_re = list(sigma="rec+1", cor ="iid"),
ecov = ecov,
model_name="Run28",
basic_info = list(simulate_process_error = rep(FALSE, 5))
)
input3$map$mean_rec_pars <- factor(c(2,1))
input3$map$mean_rec_pars <- factor(c(NA,NA))
mT <- fit_wham(input3, MakeADFun.silent = FALSE ,do.osa = F, do.retro = F, do.fit = F)
mean(mT$rep$log_SR_a[38:50,])
mean(mT$rep$log_SR_b[38:50,])
input3$par$mean_rec_pars[,1]<-c(mean(mT$rep$log_SR_a[38:50,])) # IFX THESE
input3$par$mean_rec_pars[,2]<-c(mean(mT$rep$log_SR_b[38:50,])) # FIX THESE
mT$rep$log_SR_a
mT$rep$log_SR_b
View(mT)
library(wham)
library(whamMSE)
main.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(main.dir)
year_start  <- 1  # starting year in the burn-in period
year_end    <- 20  # end year in the burn-in period
MSE_years   <- 3     # number of years in the feedback loop
# Note: no need to include MSE_years in simulation-estimation
### GENERATE BASIC INFO ###
info <- generate_basic_info(n_stocks = 1,
n_regions = 1,
n_indices = 1,
n_fleets = 1,
n_seasons = 1,
base.years = year_start:year_end,
n_feedback_years = MSE_years,
life_history = "medium",
n_ages = 12)
basic_info = info$basic_info # collect basic information
catch_info = info$catch_info # collect fleet catch information
index_info = info$index_info # collect survey information
F_info = info$F # collect fishing information
### CONFIGURE S, M, NAA ###
n_stocks  <- as.integer(basic_info['n_stocks'])
n_regions <- as.integer(basic_info['n_regions'])
n_fleets  <- as.integer(basic_info['n_fleets'])
n_indices <- as.integer(basic_info['n_indices'])
n_ages    <- as.integer(basic_info['n_ages'])
# Selectivity Configuration
fleet_pars <- c(5,1)
index_pars <- c(2,1)
sel <- list(model=rep("logistic",n_fleets+n_indices),
initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
# M Configuration
M <- list(model="constant",initial_means=array(0.2, dim = c(n_stocks,n_regions,n_ages)))
# NAA Configuration
sigma        <- "rec+1"
re_cor       <- "iid"
ini.opt      <- "equilibrium"
sigma_vals   <-  array(0.5, dim = c(n_stocks, n_regions, n_ages)) # NAA sigma
NAA_re <- list(N1_model=rep(ini.opt,n_stocks),
sigma=rep(sigma,n_stocks),
cor=rep(re_cor,n_stocks),
recruit_model = 2,  # rec random around the mean
sigma_vals = sigma_vals) # NAA_where must be specified in basic_info!
library(wham)
library(whamMSE)
main.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(main.dir)
year_start  <- 1  # starting year in the burn-in period
year_end    <- 20  # end year in the burn-in period
MSE_years   <- 3     # number of years in the feedback loop
# Note: no need to include MSE_years in simulation-estimation
### GENERATE BASIC INFO ###
info <- generate_basic_info(n_stocks = 1,
n_regions = 1,
n_indices = 1,
n_fleets = 1,
n_seasons = 1,
base.years = year_start:year_end,
n_feedback_years = MSE_years,
life_history = "medium",
n_ages = 12)
View(info)
# Selectivity Configuration
fleet_pars <- c(5,1)
index_pars <- c(2,1)
sel <- list(model=rep("logistic",n_fleets+n_indices),
initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
View(sel)
#pak::pkg_install("timjmiller/wham@lab", lib = "C:/Users/alex.hansell/AppData/Local/Programs/R/R-4.2.2/library/multi_wham/")
library(wham) #, lib.loc = "C:/Users/alex.hansell/AppData/Local/Programs/R/R-4.2.2/library/multi_wham/")
require(tidyr)
require(dplyr)
require(readxl)
require(purrr)
require(here)
require(ggplot2)
# source(here("R/my_wham_functions.R"))
# source(here::here("R/calc_hindcast_mase.R"))
# source(here::here("R/fit_hindcast.R"))
# source(here::here("R/do_selftest.R"))
# source(here::here("R/sim_fn.R"))
# source(here::here("R/make_simtest_plots.R"))
write.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(write.dir)
gb_dat <- read_asap3_dat(here("YT_proj/ASAP Dat files/GBK.DAT"))
env.dat <- read.csv("CI_indices.csv")
env.dat<-env.dat%>%
filter(Year > 1972)
ecov <- list(
label = "bt_temp",
mean = as.matrix(env.dat$bt_temp),
logsigma = 'est_1', # estimate obs sigma, 1 value shared across years
year = env.dat$Year,
use_obs = matrix(1, ncol=1, nrow=dim(env.dat)[1]),
#lag =1,# use all obs (=1)
process_model = "ar1") #, # "rw" or "ar1"
ecov$recruitment_how <- matrix("controlling-lag-1-linear") #add recruitment how to ecov
sel2=list(
model=c("age-specific",
"logistic","logistic","logistic"),
re = c("none","none","none","none"), #re = c("ar1_y","none","none","none"),
initial_pars=list(
c(0.1,0.25,0.5,1,1,1), # Commercial fleet
c(2,0.3), # Spring NEFSC
c(2,0.3), # Fall NEFSC
c(2,0.3)), # DFO survey
fix_pars = list(
c(6),
c(NULL),
c(NULL),
c(NULL))
)
View(sel2)
gb_datM<-gb_dat
gb_datM[[1]]$dat$M[,1]<-0.57
gb_datM[[1]]$dat$M[,2]<-0.33
gb_datM[[1]]$dat$M[,3]<-0.26
gb_datM[[1]]$dat$M[,4]<-0.23
gb_datM[[1]]$dat$M[,5]<-0.22
gb_datM[[1]]$dat$M[,6]<-0.22
gb_datM[[1]]$dat$M
View(list(sigma="rec+1", cor ="iid"))
library(wham)
library(whamMSE)
main.dir <- "C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Documents/GitHub/UMassD/YT_proj"
setwd(main.dir)
year_start  <- 1  # starting year in the burn-in period
year_end    <- 20  # end year in the burn-in period
MSE_years   <- 3     # number of years in the feedback loop
### GENERATE BASIC INFO ###
info <- generate_basic_info(n_stocks = 1,
n_regions = 1,
n_indices = 1,
n_fleets = 1,
n_seasons = 1,
base.years = year_start:year_end,
n_feedback_years = MSE_years,
life_history = "medium",
n_ages = 12)
basic_info = info$basic_info # collect basic information
catch_info = info$catch_info # collect fleet catch information
index_info = info$index_info # collect survey information
F_info = info$F # collect fishing information
### CONFIGURE S, M, NAA ###
n_stocks  <- as.integer(basic_info['n_stocks'])
n_regions <- as.integer(basic_info['n_regions'])
n_fleets  <- as.integer(basic_info['n_fleets'])
n_indices <- as.integer(basic_info['n_indices'])
n_ages    <- as.integer(basic_info['n_ages'])
# Selectivity Configuration
fleet_pars <- c(5,1)
index_pars <- c(2,1)
sel <- list(model=rep("logistic",n_fleets+n_indices),
initial_pars=c(rep(list(fleet_pars),n_fleets),rep(list(index_pars),n_indices)))
# M Configuration
M <- list(model="constant",initial_means=array(0.2, dim = c(n_stocks,n_regions,n_ages)))
# NAA Configuration
sigma        <- "rec+1"
re_cor       <- "iid"
ini.opt      <- "equilibrium"
sigma_vals   <-  array(0.5, dim = c(n_stocks, n_regions, n_ages)) # NAA sigma
NAA_re <- list(N1_model=rep(ini.opt,n_stocks),
sigma=rep(sigma,n_stocks),
cor=rep(re_cor,n_stocks),
recruit_model = 2,  # rec random around the mean
sigma_vals = sigma_vals) # NAA_where must be specified in basic_info!
### GENERATE WHAM INPUT###
input <- prepare_wham_input(basic_info = basic_info,
selectivity = sel,
M = M,
NAA_re = NAA_re,
catch_info = catch_info,
index_info = index_info,
F = F_info)
# Generate OM
random = input$random # check what processes are random effects
input$random = NULL # so inner optimization won't change simulated RE
om <- fit_wham(input, do.fit = F, do.brps = T, MakeADFun.silent = TRUE)
# Generate DAtaset
om_with_data <- update_om_fn(om, seed = 123, random = random)
# Specify Asses year and interval in feedback loop
assess.interval <- 3 # Note: assessment interval is 3 years, given the feedback period is 3 years, there will be only 1 assessment
base.years      <- year_start:year_end # Burn-in period
first.year      <- head(base.years,1)
terminal.year   <- tail(base.years,1)
assess.years    <- seq(terminal.year, tail(om$years,1)-assess.interval,by = assess.interval)
# USE EM same as OM for MSE
mod = loop_through_fn(om = om_with_data,
em_info = info,
random = random,
M_em = M,
sel_em = sel,
NAA_re_em = NAA_re,
age_comp_em = "multinomial",
em.opt = list(separate.em = FALSE,
separate.em.type = 3,
do.move = FALSE,
est.move = FALSE),
assess_years = assess.years,
assess_interval = assess.interval,
base_years = base.years,
year.use = 20,
add.years = TRUE,
# add.years=TRUE: assessment will use 20 years of data from historical period + new years in the feedback period
seed = 123,
save.sdrep = TRUE,
save.last.em = TRUE,
do.retro = TRUE, # Perform retrospective analysis
do.osa = TRUE) # Perform OSA residual analysis
